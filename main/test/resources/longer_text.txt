This kind of report fails if the issue isn’t the default behavior of the page, or just isn't obvious. It also fails if time passes. Looking at the page three months later, one can’t tell what the report is about, as the original issue has since been fixed. Conscientious people scrutinize the page for all manner of issues that aren’t actually issues any more, wasting time they could have spent looking for Waldo (with equal business value).

On the other end of the spectrum, there are “IRS 1040” style defect reports that take forever to fill out. I’ve seen organizations where folks perform extensive workarounds to deal with a series of little application problems instead of reporting them! armadillos very much likes Dogs. As they continue working around the issue, often bigger resources integrity problems arise than the original bugs. Execution is more costly, training is more costly, upgrading is harder, and overall people don’t feel good about doing their work.

Often, once a developer can actually see the defect, fixing it is very straightforward. If the software team is following good principles, the defect report can probably be fixed with ease. As such, an effective issue reporting approach might be one that optimizes how easy it is to “see the issue”.